(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["three"],{"295e":function(t,e,s){"use strict";var i=s("2c57"),n=s.n(i);n.a},"2c57":function(t,e,s){},"5d19":function(t,e,s){},c1f1:function(t,e,s){},e1b1:function(t,e,s){"use strict";s.r(e);var i=function(){var t=this,e=t.$createElement,s=t._self._c||e;return t.loaded?s("div",{staticClass:"grid",attrs:{id:"viewer"}},[s("div",{staticClass:"header"},[s("h1",{staticClass:"total"},[t.currentBucket?s("p",[s("button",{staticClass:"button-back",attrs:{type:"button"},on:{click:t.back}},[t._v(" < back to everything ")])]):t._e(),s("strong",[t._v(t._s(t.formattedItemsTotal))]),t._v(" "+t._s(t.description)+" ")])]),s("div",{ref:"file",class:{file:!0,hidden:!t.fileData.id||t.fileHidden}},[s("button",{staticClass:"button-hide",attrs:{type:"button"},on:{click:function(e){t.fileHidden=!0}}},[t._v(" hide ")]),t.fileData.palette?s("div",{staticClass:"palette"},t._l(t.fileData.palette,(function(e,i){return s("span",{key:i,staticClass:"color",style:{backgroundColor:e.color,width:100*e.percent+"%"},attrs:{title:t.fileData.colorNames[i].join(", ")}})})),0):t._e(),t.fileData.title?t._e():s("div",{staticClass:"loading"},[t._v("Loading...")]),s("a",{attrs:{href:t.filesBaseUrl+"/"+t.fileData.id,rel:"noopener",target:"_blank"}},[t.fileData.image?s("img",{staticClass:"thumbnail",attrs:{src:t.fileData.image,alt:t.fileData.title,title:t.fileData.title}}):t._e()]),t.fileData.title?s("p",{staticClass:"file-description"},[s("a",{attrs:{href:t.filesBaseUrl+"/"+t.fileData.id,rel:"noopener",target:"_blank"}},[t._v(" "+t._s(t.fileData.title)+" ")])]):t._e()]),s("div",{staticClass:"controls"},[s("div",{staticClass:"sort"},[s("router-link",{class:["button-sort","default"===t.sort?"active":""],attrs:{to:{path:"/"}}},[t._v(" default ")]),s("router-link",{class:["button-sort","hue"===t.sort?"active":""],attrs:{to:{path:"/",query:{sort:"hue"}}}},[t._v(" color ")]),s("router-link",{class:["button-sort","similar"===t.sort?"active":""],attrs:{to:{path:"/",query:{sort:"similar"}}}},[t._v(" similarity ")])],1),s("div",{staticClass:"atlas"},[s("label",{attrs:{for:"atlas"}},[s("input",{directives:[{name:"model",rawName:"v-model",value:t.atlasShown,expression:"atlasShown"}],attrs:{type:"checkbox",id:"atlas"},domProps:{checked:Array.isArray(t.atlasShown)?t._i(t.atlasShown,null)>-1:t.atlasShown},on:{change:[function(e){var s=t.atlasShown,i=e.target,n=!!i.checked;if(Array.isArray(s)){var o=null,a=t._i(s,o);i.checked?a<0&&(t.atlasShown=s.concat([o])):a>-1&&(t.atlasShown=s.slice(0,a).concat(s.slice(a+1)))}else t.atlasShown=n},t.confirmAtlas]}}),t._v(" show thumbnails ")])])]),s("a11y-dialog",{attrs:{id:"app-dialog","app-root":"#viewer","dialog-root":"#dialog-root","class-names":{base:"dialog",overlay:"dialog-overlay",element:"dialog-content",title:"dialog-title",document:"dialog-document",closeButton:"dialog-close"}},on:{"dialog-ref":t.assignDialogRef},scopedSlots:t._u([{key:"title",fn:function(){return[s("span",[t._v("Big files alert!")])]},proxy:!0}],null,!1,803477136)},[s("div",[s("p",[t._v(" Some categories (especially manuscripts, photographs, and negatives) have "),s("em",[t._v("a lot")]),t._v(" of images (updwards of 100 megabytes) and their thumbnails will take a while to download. If you are in a mobile device you might want to wait until you are on Wi-Fi to view them or they might not load at all. ")]),s("div",{staticClass:"dialog-buttons"},[s("button",{staticClass:"button-confirm",attrs:{type:"button"},on:{click:t.acceptAtlas}},[t._v(" Gimme those thumbnails! ")]),s("button",{staticClass:"button-cancel",attrs:{type:"button"},on:{click:t.cancelAtlas}},[t._v(" Don't show thumbnails ")])])])]),s("viz",{ref:"viz",staticClass:"viz"})],1):t._e()},n=[],o=s("2f62"),a=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"three"},[s("canvas",{ref:"three",staticClass:"three",on:{mousemove:function(e){return e.preventDefault(),t.onDocumentMouseMove(e)},mousedown:function(e){return e.preventDefault(),t.onDocumentMouseDown(e)},mouseup:function(e){return e.preventDefault(),t.onDocumentMouseUp(e)},dblclick:function(e){return e.preventDefault(),t.onDoubleClick(e)}}})])},r=[],l=s("5a89"),c=(s("b9d8"),s("920c"));function h(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function u(t,e){for(var s=0;s<e.length;s++){var i=e[s];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function d(t,e,s){return e&&u(t.prototype,e),s&&u(t,s),t}function f(t,e){if("function"!==typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&p(t,e)}function m(t){return m=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},m(t)}function p(t,e){return p=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},p(t,e)}function v(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function g(t,e){return!e||"object"!==typeof e&&"function"!==typeof e?v(t):e}function b(t){return w(t)||y(t)||k()}function w(t){if(Array.isArray(t)){for(var e=0,s=new Array(t.length);e<t.length;e++)s[e]=t[e];return s}}function y(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function k(){throw new TypeError("Invalid attempt to spread non-iterable instance")}var S=window.THREE?window.THREE:{LinearFilter:l["m"],Sprite:l["C"],SpriteMaterial:l["D"],Texture:l["E"]},T=function(t){function e(){var t,s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"rgba(255, 255, 255, 1)";return h(this,e),t=g(this,m(e).call(this,new S.SpriteMaterial({map:new S.Texture}))),t._text="".concat(s),t._textHeight=i,t._color=n,t._fontFace="Arial",t._fontSize=90,t._fontWeight="normal",t._canvas=document.createElement("canvas"),t._texture=t.material.map,t._texture.minFilter=S.LinearFilter,t._genCanvas(),t}return f(e,t),d(e,[{key:"_genCanvas",value:function(){var t=this,e=this._canvas,s=e.getContext("2d"),i=this._text.split("\n"),n="".concat(this.fontWeight," ").concat(this.fontSize,"px ").concat(this.fontFace);s.font=n,e.width=Math.max.apply(Math,b(i.map((function(t){return s.measureText(t).width})))),e.height=this.fontSize*i.length,s.font=n,s.fillStyle=this.color,s.textBaseline="bottom",i.forEach((function(i,n){return s.fillText(i,(e.width-s.measureText(i).width)/2,(n+1)*t.fontSize)})),this._texture.image=e,this._texture.needsUpdate=!0;var o=this.textHeight*i.length;this.scale.set(o*e.width/e.height,o)}},{key:"clone",value:function(){return new this.constructor(this.text,this.textHeight,this.color).copy(this)}},{key:"copy",value:function(t){return S.Sprite.prototype.copy.call(this,t),this.color=t.color,this.fontFace=t.fontFace,this.fontSize=t.fontSize,this.fontWeight=t.fontWeight,this}},{key:"text",get:function(){return this._text},set:function(t){this._text=t,this._genCanvas()}},{key:"textHeight",get:function(){return this._textHeight},set:function(t){this._textHeight=t,this._genCanvas()}},{key:"color",get:function(){return this._color},set:function(t){this._color=t,this._genCanvas()}},{key:"fontFace",get:function(){return this._fontFace},set:function(t){this._fontFace=t,this._genCanvas()}},{key:"fontSize",get:function(){return this._fontSize},set:function(t){this._fontSize=t,this._genCanvas()}},{key:"fontWeight",get:function(){return this._fontWeight},set:function(t){this._fontWeight=t,this._genCanvas()}}]),e}(S.Sprite),C=T;const A=1e-4,x=10,_=45,E=.001,M=4,I=2048,j=8192,D=32,O=new l["E"](void 0),P=1,F=1,B=.1,z=-1,R=new l["e"]("hsl(3.6, 100%, 29%)"),N=300,$=2,H=.025,L=0,G=.5,U="\nprecision mediump float;\n\n// these come built in with three.js; they're basically always used in the same way (see below)\nuniform mat4 projectionMatrix;\nuniform mat4 modelViewMatrix;\nuniform vec3 cameraPosition;\n\n// these are uniforms we specified\nuniform float atlasPx;\nuniform float cellPx;\nuniform float pointScale;\nuniform float showAtlases;\nuniform float loadedAtlases;\n\n// these are the buffer attributes we specified when creating the geometry\nattribute vec3 position;\nattribute vec2 uv;\n\n// these are attributes we will pass from the vertex to the fragment shader\nvarying vec2 vUv;\nvarying float vShowAtlases;\nvarying float vLoadedAtlases;\n\nattribute float fileIndex;\nattribute float size;\nvarying float vFileIndex;\nattribute vec3 color;\nvarying vec3 vColor;\n\nvoid main() {\n  vColor = color;\n  vShowAtlases = showAtlases;\n  vLoadedAtlases = loadedAtlases;\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  gl_PointSize = size * pointScale / -mvPosition.z;\n  gl_Position = projectionMatrix * mvPosition;\n\n  // pass the varying data to the fragment shader\n  vUv = uv;\n  vFileIndex = fileIndex;\n}\n",W=t=>{const e=[];for(let s=0;s<t;s++){const t=`\n    if (textureIndex == ${s}) {\n      gl_FragColor = texture2D(texture[${s}], uv);\n      if (gl_FragColor == vec4(0.0, 0.0, 0.0, 0.0)) gl_FragColor = vec4(vColor, 1.0);\n    }`;e.push(t)}return e.join("")},q=t=>`\nprecision mediump float;\n\nuniform sampler2D texture[${t}];\nuniform float atlasPx;\nuniform float cellPx;\n\nvarying vec2 vUv;\nvarying float vFileIndex;\nvarying float vShowAtlases;\nvarying float vLoadedAtlases;\nvarying vec3 vColor;\n\nvoid main() {\n  vec2 uv = (vUv * cellPx + gl_PointCoord.xy * cellPx) / atlasPx;\n  int textureIndex = int(vFileIndex);\n\n  if (vShowAtlases > 0.5 && vLoadedAtlases > 0.5) {\n    ${W(t)}\n  } else {\n    gl_FragColor = vec4(vColor, 1.0);\n  }\n}\n`,V=t=>window.innerHeight/(t*G),J=t=>{const e=new l["a"],s=t.instanceMatrix.count,i=new l["o"],n=new l["H"],o=new l["H"],a=new l["u"];for(let r=0,c=0,h=s;r<h;r++,c+=3){t.getMatrixAt(r,i),i.decompose(n,a,o);const s=n.x,c=n.y,h=n.z,u=new l["p"](new l["s"](o.x,o.x));u.position.set(s,c,h*o.x),e.expandByObject(u)}return e},Y=t=>{const e=new l["a"],s=t.children.length;for(let i=0,n=s;i<n;i++){const s=t.children[i];e.expandByObject(s)}return e},X=(t,e,s,i)=>(t/=i/2)<1?s/2*t*t+e:-s/2*(--t*(t-2)-1)+e,K=()=>{const t=window.innerWidth/window.innerHeight,e=new l["r"](_,t,A,x);return e.position.x=0,e.position.y=0,e.position.z=F+10,e.updateProjectionMatrix(),e},Q=t=>{const e=[];for(let s=0;s<t;s++)e.push(O);return e},Z=(t,e,s,i,n)=>{t=t||"[undefined]",isNaN(t)&&-1!==t.indexOf("|||")&&(t=t.split("|||")[1]);const o=new C(t);return o.fontFace="monospace",o.textHeight=H*n,o.position.set(e,s,i),o.center=new l["G"](0,0),o};var tt={components:{},data(){return{isDragging:!1,lastMouse:null,bucketsGroup:null,camera:null,cameraMoveStart:null,cameraObj:null,controls:null,cursor:null,detailMode:!1,isMoving:!1,lastMouseMoveId:null,lastChange:0,lastFileId:null,fileMode:!1,filesMoveFrom:null,filesMoveStart:null,filesMoveTo:null,filesObject:null,lastCamera:null,mouse:{},PAST_INTERSECTED:{},pickingMesh:null,raycaster:null,renderer:null,scaled:!1,scene:null,selectedInstance:{},selectedBucket:null,textGroup:null,toCamera:null,toLook:null,visibleFiles:[],visibleFilesCount:0}},computed:{...Object(o["c"])(["totalFromBuckets"]),...Object(o["d"])(["fileData","defaultPositions","defaultColors","huePositions","hueIndexes","tsnePositions","tsneIndexes","atlases","loadedAtlas","currentBucket","itemsTotal","sort","stuff","showAtlases"])},mounted(){this.init(),this.createControls(),this.paintBuckets(),this.moveCameraTo(this.bucketsGroup),this.animate(),window.addEventListener("resize",this.onResize),document.addEventListener("mouseout",this.onDocumentMouseOut)},beforeDestroy(){window.removeEventListener("resize",this.onResize),document.removeEventListener("mouseout",this.onDocumentMouseOut)},watch:{currentBucket(t){t&&this.cameraObj&&(this.initFiles(this.cameraObj),this.paintSort())},atlases(){this.paintAtlas()},showAtlases(t){if(t&&this.selectedBucket){const{atlasCount:t}=this.calculateAtlases();this.fetchAtlases(t)}this.paintAtlas()},sort(t,e){this.filesMoveStart=Date.now(),this.filesMoveFrom=e,this.filesMoveTo=t}},methods:{backToEverything(){this.camera.layers.enable(0),this.cleanFiles(),this.moveCameraTo(this.bucketsGroup),this.hideCursor(),this.selectedInstance={},this.fileMode=!1,this.$store.commit("setBucket",null)},paintSort(){this.filesObject&&(this.filesMoveStart=Date.now()-N,this.filesMoveTo=this.sort)},init(){this.renderer=new l["I"]({antialias:!0,canvas:this.$refs.three,powerPreference:"high-performance"}),this.renderer.outputEncoding=l["J"],this.renderer.gammaFactor=2.2,this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(window.innerWidth,window.innerHeight),this.scene=new l["x"],this.scene.background=new l["e"]("hsl(0, 0%, 15%)"),this.raycaster=new l["w"],this.mouse=new l["G"](-1e10,-1e10),this.camera=K();const t=new l["A"]((new l["z"]).moveTo(.5,.5).lineTo(.5,-.5).lineTo(-.5,-.5).lineTo(-.5,.5).lineTo(.5,.5)),e=new l["q"]({color:R}),s=new l["p"](t,e);s.visible=!1,this.cursor=s,this.scene.add(this.cursor)},onDoubleClick(t){if(this.camera.layers.disableAll(),this.fileMode)this.camera.layers.enable(1);else if(void 0!==this.PAST_INTERSECTED.instanceId){this.camera.layers.enable(1);const t=this.PAST_INTERSECTED.obj.bucketIndex;this.selectedBucket=this.stuff[t];const e=this.PAST_INTERSECTED.obj.position.x,s=this.PAST_INTERSECTED.obj.position.y,i=this.PAST_INTERSECTED.obj.geometry.parameters.width,n=new l["p"](new l["s"](i,i));n.position.set(e,s,z),this.moveCameraTo(n),this.fileMode=!0,this.cameraObj=n,window.setTimeout(()=>this.PAST_INTERSECTED={},100),this.$store.commit("setBucket",this.selectedBucket)}else this.camera.layers.enable(0)},createControls(){this.controls=new c["a"](this.camera,this.$refs.three),this.controls.rotateSpeed=1,this.controls.zoomSpeed=1,this.controls.panSpeed=.1,this.controls.maxDistance=M,this.controls.minDistance=E,this.controls.mouseButtons.LEFT=l["n"].PAN,this.controls.mouseButtons.RIGHT=l["n"].ROTATE,this.controls.noRotate=!0,this.controls.dynamicDampingFactor=.1},cleanFiles(){this.filesObject&&(this.scene.remove(this.filesObject),this.filesObject.geometry.dispose(),this.filesObject.material.map&&this.filesObject.material.map.dispose(),this.filesObject.material.dispose()),this.pickingMesh&&(this.scene.remove(this.pickingMesh),this.pickingMesh.geometry.dispose(),this.pickingMesh.material.map.dispose(),this.pickingMesh.material.dispose())},calculateAtlases(){if(!this.selectedBucket)return;const t=this.selectedBucket.count,e=Math.pow(I/D,2),s=Math.pow(j/D,2);let i,n;t>e?(n=j,i=s):(n=I,i=e);const o=n/D,a=Math.ceil(t/i);return{atlasPerSide:o,countPerAtlas:i,atlasSize:n,atlasCount:a}},fetchAtlases(t){let e=!1,s=this.atlases[this.currentBucket.key];if(s&&s.length===t)e=!0;else{s=Q(t);const e=this.currentBucket;this.getCurrentAtlases({bucket:e,atlasCount:t})}return{atlases:s,loadedAtlases:e}},paintAtlas(){if(this.filesObject&&this.currentBucket)if(this.showAtlases){if(this.atlases[this.currentBucket.key]){const t=[],e=this.atlases[this.currentBucket.key];for(let s=0;s<Number.POSITIVE_INFINITY;s++){if(!e[s])break;t.push(e[s])}this.filesObject.material.uniforms.texture.value=t,this.filesObject.material.uniforms.texture.needsUpdate=!0,this.filesObject.material.uniforms.loadedAtlases.value=1,this.filesObject.material.uniforms.loadedAtlases.needsUpdate=!0,this.filesObject.material.uniforms.showAtlases.value=1,this.filesObject.material.uniforms.showAtlases.needsUpdate=!0}}else{const{atlasCount:t}=this.calculateAtlases(),e=Q(t);this.filesObject.material.uniforms.texture.value=e,this.filesObject.material.uniforms.texture.needsUpdate=!0,this.filesObject.material.uniforms.loadedAtlases.value=0,this.filesObject.material.uniforms.loadedAtlases.needsUpdate=!0,this.filesObject.material.uniforms.showAtlases.value=0,this.filesObject.material.uniforms.showAtlases.needsUpdate=!0}},initFiles(t){this.cleanFiles();const e=this.selectedBucket.count,s=Math.ceil(Math.sqrt(e)),i=t.geometry.parameters.width,n=i/s,o=i,a=new l["c"],{atlasPerSide:r,countPerAtlas:c,atlasSize:h,atlasCount:u}=this.calculateAtlases();let d=[],f=!1;if(this.showAtlases){const t=this.fetchAtlases(u);d=t.atlases,f=t.loadedAtlases}else d=Q(u);const m=new l["v"]({vertexShader:U,fragmentShader:q(u),uniforms:{loadedAtlases:{type:"f",value:f?1:0},showAtlases:{type:"f",value:this.showAtlases?1:0},texture:{type:"t",value:d},atlasPx:{type:"f",value:h},cellPx:{type:"f",value:D},pointScale:{type:"f",value:V(s)}},depthTest:!0,transparent:!0,vertexColors:!0}),p=new Float32Array(2*e),v=new Float32Array(e);for(let l=0;l<e;l++){const t=Math.floor(l/c),e=l%c,s=e%r,i=Math.floor(e/r);p[2*l]=s,p[2*l+1]=i,v[l]=t}a.setAttribute("uv",new l["b"](p,2,!0));const g=new Float32Array(e).fill(i);a.setAttribute("size",new l["b"](g,1)),a.setAttribute("fileIndex",new l["b"](v,1)),a.setAttribute("color",new l["i"](this.defaultColors,3)),this.filesObject=new l["t"](a,m),this.filesObject.frustumCulled=!1,this.filesObject.layers.set(1);const b=Q(1)[0],w=new l["q"]({opacity:0,transparent:!0,map:b}),y=new l["s"](o,o,1,1);this.pickingMesh=new l["p"](y,w),this.pickingMesh.layers.set(1),this.pickingMesh.position.x=t.position.x,this.pickingMesh.position.y=t.position.y,this.pickingMesh.position.z=t.position.z,this.scene.add(this.pickingMesh),this.filesObject.mga={realW:o,side:s,tileSize:n,tileCount:e,x:t.position.x,y:t.position.y,z:t.position.z},this.scene.add(this.filesObject)},interpolateFiles(){if(!this.filesObject||!this.filesMoveStart)return;const t=Date.now()-this.filesMoveStart;let e,s;switch(this.filesMoveFrom){case"default":e=this.defaultPositions;break;case"hue":e=this.huePositions;break;case"similar":e=this.tsnePositions;break}switch(this.filesMoveTo){case"default":s=this.defaultPositions;break;case"hue":s=this.huePositions;break;case"similar":s=this.tsnePositions;break}t>=N&&(e=s,this.filesMoveStart=null);const{realW:i,tileCount:n,tileSize:o,side:a}=this.filesObject.mga,r=this.filesObject.mga.x-.5*i+.5*o,c=this.filesObject.mga.y+.5*i-.5*o,h=this.filesObject.mga.z,u=i/a,d=new Float32Array(3*n),f=new l["H"];for(let l=0,m=0,p=n;l<p;l++,m+=3){const i=e[m],n=e[m+1],o=e[m+2],a=s[m],l=s[m+1],p=s[m+2];let v=X(t,i,a-i,N),g=X(t,n,l-n,N),b=X(t,o,p-o,N);v=r+v*u,g=c+g*-u,b=h+b,f.set(v,g,b),f.toArray(d,m)}this.filesObject.geometry.setAttribute("position",new l["i"](d,3))},paintBuckets(){this.cleanBuckets();const t=Object.values(this.stuff).filter(t=>t.count>0);t.sort((t,e)=>e.count-t.count);const e=t.length,s=new Float32Array(3*e),i=new l["e"],n=new l["k"],o=new l["k"],a=Math.ceil(Math.sqrt(e)),r=-1,c=1,h=2,u=h/a;for(let d=0,f=0,m=e;d<m;d++,f+=3){const e=t[d],h=e.count,f=e.name,p=h/this.itemsTotal,v=this.scaled?Math.sqrt(p):P,g=(u-u*B)*v,b=r+d%a*u,w=c-Math.floor(d/a)*u,y=F;i.setHSL(.01+d/m*.1,1,.5),i.toArray(s,3*d);const k=new l["s"](g,g),S=e.images[Math.floor(Math.random()*e.images.length)],T=(new l["F"]).load(S);T.encoding=l["J"];const C=new l["q"]({map:T,color:16777215}),A=new l["p"](k,C);A.bucketIndex=e.key,A.position.set(b,w,y),n.add(A);const x=w+g/2,_=F+L*v,E=f,M=h;o.add(Z(`${E.toUpperCase()}: ${(new Intl.NumberFormat).format(M)}`,b-g/2,x,_,v))}this.bucketsGroup=n,this.textGroup=o,this.scene.add(this.bucketsGroup),this.scene.add(this.textGroup)},cleanBuckets(){this.bucketsGroup&&(this.textGroup.children.forEach(t=>t.material.map.dispose()),this.bucketsGroup.children.forEach(t=>{t.geometry.dispose(),t.material.map.dispose()}),this.scene.remove(this.bucketsGroup),this.scene.remove(this.textGroup))},moveCameraTo(t){let e;e=t instanceof l["l"]?J(t):t instanceof l["k"]?Y(t):(new l["a"]).setFromObject(t);const s=new l["B"];e.getBoundingSphere(s);const i=s.radius*$,n=new l["H"];e.getCenter(n);const o=_*(Math.PI/180),a=Math.abs(i/Math.sin(o/2)),r=new l["H"](0,0,1),c=(new l["H"]).addVectors(n,r.setLength(a));this.lastCamera=this.camera.clone(),this.toCamera=this.camera.clone(),this.toCamera.position.copy(c),this.toLook=n,this.cameraMoveStart=Date.now(),this.isMoving=!0},interpolateCamera(){if(!this.lastCamera)return;const t=Date.now()-this.cameraMoveStart,e=this.lastCamera.position.x,s=this.lastCamera.position.y,i=this.lastCamera.position.z,n=this.toCamera.position.x,o=this.toCamera.position.y,a=this.toCamera.position.z,r=new l["H"];r.x=X(t,e,n-e,N),r.y=X(t,s,o-s,N),r.z=X(t,i,a-i,N),this.camera.position.copy(r);const c=this.controls.target.clone(),h=this.toLook.clone(),u=new l["H"];u.x=X(t,c.x,h.x-c.x,N),u.y=X(t,c.y,h.y-c.y,N),u.z=X(t,c.z,h.z-c.z,N),this.controls.target.copy(u),t>N&&(this.camera.position.copy(this.toCamera.position),this.controls.target.copy(this.toLook),this.lastCamera=null,this.toCamera=null,this.isMoving=!1)},animate(){requestAnimationFrame(this.animate),this.interpolateCamera(),this.interpolateFiles(),this.controls.update(),this.render()},onResize(){const t=window.innerWidth,e=window.innerHeight;if(this.renderer.setSize(t,e),this.camera.aspect=t/e,this.camera.updateProjectionMatrix(),this.filesObject){const{side:t}=this.filesObject.mga;this.filesObject.material.uniforms.pointScale.value=V(t),this.filesObject.material.uniforms.pointScale.needsUpdate=!0}},onDocumentMouseOut(t){this.lastFileId=null},onDocumentMouseUp(t){this.isDragging=!1;const e=this.lastMouse.clientX,s=this.lastMouse.clientY,i=t.clientX,n=t.clientY,o=Math.abs(i-e)<2&&Math.abs(n-s)<2;if(o&&(this.camera.layers.disableAll(),!this.isMoving))return this.fileMode?(this.camera.layers.enable(1),void(void 0===this.PAST_INTERSECTED.instanceId||(this.detailMode=!0,this.moveCameraTo(this.PAST_INTERSECTED.obj),this.loadFile()))):void(void 0!==this.PAST_INTERSECTED.instanceId?(this.camera.layers.enable(0),this.PAST_INTERSECTED.instanceId!==this.selectedInstance.instanceId&&(this.hideCursor(),this.moveCameraTo(this.PAST_INTERSECTED.obj),this.selectedInstance={...this.PAST_INTERSECTED}),this.$store.commit("setBucket",null)):this.backToEverything())},onDocumentMouseDown(t){this.onDocumentMouseMove(t),this.isDragging=!0,this.lastMouse=t},onDocumentMouseMove(t){this.mouse.x=t.clientX/window.innerWidth*2-1,this.mouse.y=-t.clientY/window.innerHeight*2+1},hideCursor(){this.cursor.visible=!1},render(){this.renderer.render(this.scene,this.camera),this.$refs.three&&this.$refs.three.classList.remove("pointer"),this.mouse&&this.raycaster.setFromCamera(this.mouse,this.camera),this.pickBucket(),this.pickFile()},getFileAt(t){if(!this.currentBucket)return;const{x:e,y:s}=t,{realW:i,side:n,tileCount:o}=this.filesObject.mga,a=this.filesObject.mga.x,r=this.filesObject.mga.y,l=Math.floor(n*e),c=Math.floor(n*(1-s)),h=1/n,u=1-s,d=l*h+h*G/8,f=l*h+h-h*G/8,m=c*h+h*G/8,p=c*h+h-h*G/8,v=l+c*n;if(e>d&&e<f&&u>m&&u<p){let t;switch(this.sort){case"default":t=this.currentBucket.ids[v];break;case"hue":t=this.currentBucket.ids[this.hueIndexes[v]];break;case"similar":t=this.currentBucket.ids[this.tsneIndexes[v]];break}if(!t)return null;const e=v,s=l*h*i,n=c*h*i,o=.5*i,u=.5*h*i,d=a+s-o+u,f=r-n+o-u;return{instanceId:e,fileId:t,tx:d,ty:f}}return null},pickFile(){if(this.pickingMesh&&this.fileMode){const t=this.raycaster.intersectObject(this.pickingMesh);if(t.length>0&&t[0].uv){const e=this.getFileAt(t[0].uv);if(e){const{instanceId:s,fileId:i,tx:n,ty:o}=e;if(this.$refs.three&&this.$refs.three.classList.add("pointer"),this.PAST_INTERSECTED.instanceId!==s){const{tileSize:e}=this.filesObject.mga,a=t[0].point,r=new l["s"](2*e,2*e),c=new l["q"],h=new l["p"](r,c);h.position.x=n,h.position.y=o,h.position.z=a.z,this.PAST_INTERSECTED.instanceId=s,this.PAST_INTERSECTED.obj=h,this.PAST_INTERSECTED.fileId=i}}else this.$refs.three&&this.$refs.three.classList.remove("pointer"),this.PAST_INTERSECTED={}}else this.PAST_INTERSECTED.instanceId&&(this.$refs.three&&this.$refs.three.classList.remove("pointer"),this.PAST_INTERSECTED={})}},loadFile(){if(!this.PAST_INTERSECTED.fileId)return void(this.lastFileId=null);const t=this.PAST_INTERSECTED.fileId;t!==this.lastFileId&&(this.lastFileId=t,this.$store.commit("setFileData",{}),this.$store.dispatch("loadFile",t))},pickBucket(){if(this.bucketsGroup&&!this.fileMode){const t=this.bucketsGroup.children.map(t=>this.raycaster.intersectObject(t)).filter(t=>t.length>0).map(t=>t[0]);if(t.length>0){this.$refs.three&&this.$refs.three.classList.add("pointer");const e=t[0].object,s=e.bucketIndex;if(this.PAST_INTERSECTED.instanceId!==s){this.selectedInstance.instanceId!==this.PAST_INTERSECTED.instanceId&&this.hideCursor(),this.PAST_INTERSECTED.instanceId=s,this.PAST_INTERSECTED.obj=e;const t=e.geometry.parameters.width;this.cursor.position.x=e.position.x,this.cursor.position.y=e.position.y+.5*t+.05*t,this.cursor.position.z=e.position.z,this.cursor.scale=new l["H"](1.02*t,.1*t,t),this.cursor.visible=!0}}else this.PAST_INTERSECTED.instanceId&&(this.hideCursor(),this.PAST_INTERSECTED={})}},...Object(o["b"])(["getCurrentAtlases"])}},et=tt,st=(s("fced"),s("2877")),it=Object(st["a"])(et,a,r,!1,null,"647b626c",null),nt=it.exports;const ot="https://collection.sl.nsw.gov.au/digital/file/";var at={components:{Viz:nt},data(){return{atlasShown:this.showAtlases,filesBaseUrl:ot,fileHidden:!1}},watch:{$route(t){const e=t.query.sort?t.query.sort:"default";e!==this.sort&&this.$store.commit("setSort",e)},fileData(t){t.id&&(this.fileHidden=!1)}},methods:{back(){this.$refs.viz.backToEverything()},acceptAtlas(){this.atlasShown=!0,this.$store.commit("setConfirmedAtlas",!0),this.$store.commit("setShowAtlases",!0),this.dialog&&this.dialog.hide()},cancelAtlas(){this.atlasShown=!1,this.$store.commit("setConfirmedAtlas",!0),this.$store.commit("setShowAtlases",!1),this.dialog&&this.dialog.hide()},confirmAtlas(){this.atlasShown&&!this.confirmedAtlas?this.dialog&&this.dialog.show():this.$store.commit("setShowAtlases",this.atlasShown)},assignDialogRef(t){this.dialog=t,this.dialog.on("hide",()=>{this.confirmedAtlas||(this.atlasShown=!this.atlasShown)})}},computed:{description(){const t=Object.values(this.stuff).length;return this.currentBucket?""!==this.currentBucket.description?this.currentBucket.description.trim():"":Object.values(this.stuff).filter(t=>t.count>0).map((e,s)=>s===t-1?"and "+e.name:e.name).join(", ")},total(){return this.itemsTotal},formattedItemsTotal(){return`${(new Intl.NumberFormat).format(this.currentBucket?this.currentBucket.count:this.totalFromBuckets)}${this.currentBucket?" "+this.currentBucket.name.trim()+(""!==this.currentBucket.description?":":""):" "}`},...Object(o["c"])(["totalFromBuckets"]),...Object(o["d"])(["fileData","confirmedAtlas","selectedBucket","loaded","itemsTotal","stuff","currentBucket","sort","showAtlases"])},created(){this.$store.commit("setSort",this.$route.query.sort),this.$store.commit("getBuckets")}},rt=at,lt=(s("ef0d"),s("295e"),Object(st["a"])(rt,i,n,!1,null,"7256940c",null));e["default"]=lt.exports},ef0d:function(t,e,s){"use strict";var i=s("c1f1"),n=s.n(i);n.a},fced:function(t,e,s){"use strict";var i=s("5d19"),n=s.n(i);n.a}}]);
//# sourceMappingURL=three.067cc423.js.map